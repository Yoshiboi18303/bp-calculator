"use strict";(self.webpackChunkapex_bp_calculator_website=self.webpackChunkapex_bp_calculator_website||[]).push([[847],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(a),m=n,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return a?r.createElement(g,l(l({ref:t},s),{},{components:a})):r.createElement(g,l({ref:t},s))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6195:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2,sidebar_label:"Package"},l="Package API",i={unversionedId:"api/package",id:"api/package",title:"Package API",description:"Here are all the methods in the package.",source:"@site/docs/api/package.md",sourceDirName:"api",slug:"/api/package",permalink:"/bp-calculator/docs/api/package",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Package"},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/bp-calculator/docs/api/options"},next:{title:"Changelog",permalink:"/bp-calculator/docs/changelog"}},p={},c=[{value:"<code>calculate</code>",id:"calculate",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Error Handling",id:"error-handling",level:3}],s={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"package-api"},"Package API"),(0,n.kt)("p",null,"Here are all the methods in the package."),(0,n.kt)("h2",{id:"calculate"},(0,n.kt)("a",{parentName:"h2",href:"https://github.com/Yoshiboi18303/apex-bp-calculator/blob/main/utils/index.ts#L21"},(0,n.kt)("inlineCode",{parentName:"a"},"calculate"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"bpCalculator.calculate(current, goal, extraStars);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Calculates how many stars are needed to get to ",(0,n.kt)("inlineCode",{parentName:"strong"},"goal"))),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"current"))," - The user's current level in the Battle Pass. ",(0,n.kt)("strong",{parentName:"p"},"{",(0,n.kt)("inlineCode",{parentName:"strong"},"number"),"}")," - ",(0,n.kt)("strong",{parentName:"p"},"Must be between 1 and 110.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"goal"))," - The user's goal level in the Battle Pass. ",(0,n.kt)("strong",{parentName:"p"},"{",(0,n.kt)("inlineCode",{parentName:"strong"},"number"),"}")," - ",(0,n.kt)("strong",{parentName:"p"},"Must be between 1 and 110.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"extraStars"))," - How many extra stars the user has. ",(0,n.kt)("strong",{parentName:"p"},"{",(0,n.kt)("inlineCode",{parentName:"strong"},"number"),"}")," - ",(0,n.kt)("strong",{parentName:"p"},"Must be between 1 and 10.")),(0,n.kt)("h3",{id:"returns"},"Returns"),(0,n.kt)("p",null,"A ",(0,n.kt)("inlineCode",{parentName:"p"},"number")," representing the number of stars needed to get to ",(0,n.kt)("inlineCode",{parentName:"p"},"goal"),"."),(0,n.kt)("h3",{id:"throws"},"Throws"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If any of the parameters are out of bounds.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(bpCalculator.calculate(111, 110, 0)); // => Error: Value can't be greater than 110!\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(bpCalculator.calculate(-5, 10, 0)); // => Error: Value can't be lower than 1!\n")),(0,n.kt)("h3",{id:"error-handling"},"Error Handling"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"try {\n    const calculated = bpCalculator.calculate(111, 110, 0); // error will be thrown here.\n    console.log(calculated);\n} catch (e) { // error is caught here before it kills the program.\n    console.error(e); // => Error: Value can't be greater than 110!\n\n    // This line ensures that the error was caught. Don't use this in a real project.\n    console.log(\"The error was not thrown, but rather logged.\") // => The error was not thrown, but rather logged.\n}\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This code is the same for both JavaScript and TypeScript.")),(0,n.kt)("admonition",{title:"Just a note",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"This code is for demonstration purposes, using it may cause problems especially if you have not defined ",(0,n.kt)("inlineCode",{parentName:"p"},"bpCalculator")," as an import of the package.")))}d.isMDXComponent=!0}}]);